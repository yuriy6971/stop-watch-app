{"version":3,"sources":["StopWatch/stopWatch.module.css","StopWatch/StopWatch.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","StopWatch","props","useState","seconds","setSeconds","minutes","setMinutes","hours","setHours","isWork","setIsWork","className","s","header","screens","item_watch","screen_watch","String","padStart","abr_hours","block_buttons","butt","butt_stop","onClick","butt_start","butt_wait","onDoubleClick","butt_reset","setTimeout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,OAAS,0BAA0B,QAAU,2BAA2B,aAAe,gCAAgC,WAAa,8BAA8B,UAAY,6BAA6B,cAAgB,iCAAiC,KAAO,wBAAwB,UAAY,6BAA6B,WAAa,8BAA8B,UAAY,6BAA6B,WAAa,gC,2JC8Evb,SAASC,EAAYC,EAAUC,GAC3B,IAAMC,EAAgBC,mBAGtBC,qBAAU,WACNF,EAAcG,QAAUL,IACzB,CAACA,IAGJI,qBAAU,WAIN,GAAc,OAAVH,EAAgB,CAChB,IAAIK,EAAKC,aAJb,WACIL,EAAcG,YAGaJ,GAC3B,OAAO,kBAAMO,cAAcF,OAEhC,CAACL,IAEOQ,MA7FG,SAACC,GAEf,MAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA4BN,oBAAS,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KAIApB,GAAY,WACHmB,GACLL,GAAW,SAACD,GAAc,OAAmB,KAAZA,EAAiB,EAAIA,EAAU,OACjE,KAEHb,GAAY,WACHmB,GACLH,GAAW,SAACD,GAAc,OAAmB,KAAZA,EAAiB,EAAIA,EAAU,OACjE,KAEHf,GAAY,WACJmB,GACJD,GAAS,SAACD,GAAW,OAAiB,KAAVA,EAAe,EAAIA,EAAO,OACrD,MAEL,IAAMP,EAAY,WACdU,GAAU,GACVN,EAAW,IAmBf,OACI,gCACI,oBAAIO,UAAaC,IAAEC,OAAnB,uBACA,sBAAKF,UAAWC,IAAEE,QAAlB,UACI,sBAAKH,UAAWC,IAAEG,WAAlB,UACI,mBAAGJ,UAAWC,IAAEI,aAAhB,SAA+BC,OAAOV,GAAOW,SAAS,EAAG,OACzD,mBAAGP,UAAWC,IAAEO,UAAhB,mBAEJ,sBAAKR,UAAWC,IAAEG,WAAlB,UACI,mBAAGJ,UAAWC,IAAEI,aAAhB,SAA+BC,OAAOZ,GAASa,SAAS,EAAG,OAC3D,mBAAGP,UAAWC,IAAEO,UAAhB,mBAEJ,sBAAKR,UAAWC,IAAEG,WAAlB,UACI,mBAAGJ,UAAWC,IAAEI,aAAhB,SAA+BC,OAAOd,GAASe,SAAS,EAAG,OAC3D,mBAAGP,UAAWC,IAAEO,UAAhB,sBAKR,sBAAKR,UAAWC,IAAEQ,cAAlB,UACKX,EAAS,wBAAQE,UAAS,UAAKC,IAAES,KAAP,YAAeT,IAAEU,WAAaC,QAASvB,EAAxD,kBAAoF,wBAAQW,UAAS,UAAKC,IAAES,KAAP,YAAeT,IAAEY,YAAcD,QApCvI,WACfb,GAAU,IAmC4F,mBAC9F,wBAAQC,UAAS,UAAKC,IAAES,KAAP,YAAeT,IAAEa,WAAaC,cA1BzC,WACdhB,GAAWD,IAyBH,kBACA,wBAAQE,UAAS,UAAKC,IAAES,KAAP,YAAeT,IAAEe,YAAcJ,QAnCzC,WACfnB,EAAW,GACXM,GAAU,GACVkB,YAAW,WACPlB,GAAU,KACX,MA8BK,0B,MC3DDmB,MATf,WACE,OACE,qBAAKlB,UAAU,MAAf,SACC,cAAC,EAAD,OCKUmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7986cf6a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"stopWatch_header__Mv-6u\",\"screens\":\"stopWatch_screens__ONdq7\",\"screen_watch\":\"stopWatch_screen_watch__foP4n\",\"item_watch\":\"stopWatch_item_watch__36HTN\",\"abr_hours\":\"stopWatch_abr_hours__2OlJt\",\"block_buttons\":\"stopWatch_block_buttons__2B8YM\",\"butt\":\"stopWatch_butt__37qYD\",\"butt_stop\":\"stopWatch_butt_stop__2zQg1\",\"butt_start\":\"stopWatch_butt_start__11pss\",\"butt_wait\":\"stopWatch_butt_wait__YKWvE\",\"butt_reset\":\"stopWatch_butt_reset__1U6IH\"};","import React, { useState, useEffect, useRef } from 'react'\r\nimport s from './stopWatch.module.css'\r\n\r\n\r\n\r\nconst StopWatch = (props) => {\r\n\r\n    const [seconds, setSeconds] = useState(0)\r\n    const [minutes, setMinutes] = useState(0)\r\n    const [hours, setHours] = useState(0)\r\n    const [isWork, setIsWork] = useState(false)\r\n\r\n\r\n\r\n    useInterval(() => {\r\n        if (!isWork) return\r\n        setSeconds((seconds) => { return seconds === 59 ? 0 : seconds + 1 });\r\n    }, 1000);\r\n\r\n    useInterval(() => {\r\n        if (!isWork) return\r\n        setMinutes((minutes) => { return minutes === 59 ? 0 : minutes + 1 });\r\n    }, 60000);\r\n\r\n    useInterval(() => {\r\n        if(!isWork) return \r\n        setHours((hours) => {return hours === 12 ? 0 : hours +1});\r\n      }, 3600000);\r\n\r\n    const StopWatch = () => {\r\n        setIsWork(false)\r\n        setSeconds(0)\r\n    }\r\n\r\n    const StartWatch = () => {\r\n        setIsWork(true)\r\n    }\r\n    const resetWatch = () => {\r\n        setSeconds(0)\r\n        setIsWork(false)\r\n        setTimeout(() => {\r\n            setIsWork(true)\r\n        }, 500)\r\n    }\r\n\r\n    const waitWatch = () => {\r\n        setIsWork(!isWork)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2 className = {s.header}>stopwatch</h2>\r\n            <div className={s.screens}>\r\n                <div className={s.item_watch}>\r\n                    <p className={s.screen_watch}>{String(hours).padStart(2, \"0\")}</p>\r\n                    <p className={s.abr_hours}>HH</p>\r\n                </div>\r\n                <div className={s.item_watch}>\r\n                    <p className={s.screen_watch}>{String(minutes).padStart(2, \"0\")}</p>\r\n                    <p className={s.abr_hours}>MM</p>\r\n                </div>\r\n                <div className={s.item_watch}>\r\n                    <p className={s.screen_watch}>{String(seconds).padStart(2, \"0\")}</p>\r\n                    <p className={s.abr_hours}>SS</p>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className={s.block_buttons}>\r\n                {isWork ? <button className={`${s.butt} ${s.butt_stop}`} onClick={StopWatch} >stop</button> : <button className={`${s.butt} ${s.butt_start}`} onClick={StartWatch} >start</button>}\r\n                <button className={`${s.butt} ${s.butt_wait}`} onDoubleClick={waitWatch}>wait</button>\r\n                <button className={`${s.butt} ${s.butt_reset}`} onClick={resetWatch} >reset</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nfunction useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n\r\n    // Remember the latest function.\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    // Set up the interval.\r\n    useEffect(() => {\r\n        function tick() {\r\n            savedCallback.current();\r\n        }\r\n        if (delay !== null) {\r\n            let id = setInterval(tick, delay);\r\n            return () => clearInterval(id);\r\n        }\r\n    }, [delay]);\r\n}\r\nexport default StopWatch","import StopWatch from './StopWatch/StopWatch';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <StopWatch/>\n     \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}